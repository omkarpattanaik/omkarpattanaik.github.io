{"version":3,"file":"static/js/829.65b45ee4.chunk.js","mappings":"2NAKaA,EAAoB,CAC/BC,MAAO,SAACC,EAAaC,EAAeC,GAA7B,OAA6CC,KAAKH,IAAIG,KAAKD,IAAIF,EAAKC,GAAQC,EAA5E,EACPE,KAAM,SAACJ,EAAaE,GAAd,OAA8BC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMF,EAAM,GAAKA,EAA3E,GAuBR,EAf4D,WAC1D,MAAsBO,EAAAA,SAAuBT,EAAEM,KAAK,GAAI,MAAxD,eAEA,OACE,kBAAMI,UAAU,mBAAhB,WAKE,iBAAMA,UAAU,qCAAhB,wBACA,iBAAMA,UAAU,oCAAhB,sBAGL,C","sources":["components/WorkedAndLearnedSnap/WorkedAndLearnedSnap.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport './WorkedAndLearnedSnap.scss';\r\n\r\ninterface WorkedAndLearnedSnapProps {}\r\n\r\nexport const N: INumberUtility = {\r\n  clamp: (min: number, value: number, max: number) => Math.min(Math.max(min, value), max),\r\n  rand: (min: number, max: number) => Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\ninterface INumberUtility {\r\n  clamp: (min: number, value: number, max: number) => number;\r\n  rand: (min: number, max: number) => number;\r\n}\r\n\r\nconst WorkedAndLearnedSnap: FC<WorkedAndLearnedSnapProps> = () => {  \r\n  const [temperature] = React.useState<number>(N.rand(65, 85));\r\n  \r\n  return(\r\n    <span className=\"workedAndLearned\">\r\n      {/* <i className=\"workedAndLearned-type fa-duotone fa-sun\" /> */}\r\n      {/* <span className=\"workedAndLearned-temperature-value\">{temperature}</span>\r\n      <span className=\"workedAndLearned-temperature-unit\">°F</span> */}\r\n      \r\n      <span className=\"workedAndLearned-temperature-value\">Portfolio</span>\r\n      <span className=\"workedAndLearned-temperature-unit\">⏬</span>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default WorkedAndLearnedSnap;\r\n"],"names":["N","clamp","min","value","max","Math","rand","floor","random","React","className"],"sourceRoot":""}