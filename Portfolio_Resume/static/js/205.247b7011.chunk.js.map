{"version":3,"file":"static/js/205.247b7011.chunk.js","mappings":"6MAEMA,GAA2BC,EAAAA,EAAAA,OAAK,kBAAM,oDAAN,IAQtC,EAN6B,SAACC,GAAD,OAC3B,SAAC,EAAAC,SAAD,CAAUC,SAAU,KAApB,UACE,SAACJ,GAAD,UAA8BE,KAFL,ECc7B,EAT6B,SAAAA,GAC3B,OACE,iBAAKG,GAAIH,EAAMG,GAAIC,UAAU,OAA7B,WACE,SAACC,EAAA,EAAD,KACA,SAAC,EAAD,MAGL,C,4GCFYC,EAAuB,WAClC,MAAwBC,EAAAA,SAAqB,IAAIC,MAAjD,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAH,EAAAA,WAAgB,WACd,IAAMI,EAA2BC,aAAY,WAC3C,IAAMC,EAAe,IAAIL,KAEtBK,EAAOC,eAAiBL,EAAKK,cAC9BJ,EAAQG,EAEX,GAAE,KAEH,OAAO,kBAAME,cAAcJ,EAApB,CACR,GAAE,CAACF,IAEGA,CACR,EAED,EA3BgB,WACKH,IAEnB,OAEE,iBAAMF,UAAU,OAAhB,4BAEH,C","sources":["components/WorkedAndLearnedSnap/WorkedAndLearnedSnap.lazy.tsx","components/Info/Info.tsx","components/Time/Time.tsx"],"sourcesContent":["import React, { lazy, Suspense } from 'react';\r\n\r\nconst LazyWorkedAndLearnedSnap = lazy(() => import('./WorkedAndLearnedSnap'));\r\n\r\nconst WorkedAndLearnedSnap = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\r\n  <Suspense fallback={null}>\r\n    <LazyWorkedAndLearnedSnap {...props} />\r\n  </Suspense>\r\n);\r\n\r\nexport default WorkedAndLearnedSnap;\r\n","import React, { FC } from 'react';\r\nimport Time from '../Time/Time';\r\nimport WorkedAndLearnedSnap from '../WorkedAndLearnedSnap/WorkedAndLearnedSnap.lazy';\r\nimport './Info.scss';\r\n\r\nexport interface IInfoProps {\r\n  id?: string;\r\n}\r\n\r\nconst Info: FC<IInfoProps> = props => {\r\n  return(\r\n    <div id={props.id} className=\"info\">\r\n      <Time />\r\n      <WorkedAndLearnedSnap />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info;\r\n","import React, { FC } from 'react';\r\nimport './Time.scss';\r\n\r\ninterface TimeProps {}\r\n\r\nconst Time: FC= () => {\r\n  const date: Date = useCurrentDateEffect();\r\n  \r\n  return(\r\n    // <span className=\"time\">{T.format(date)}</span>\r\n    <span className=\"time\">Omkar Pattanaik</span>\r\n  )\r\n};\r\n\r\nexport const useCurrentDateEffect = (): Date => {\r\n  const [date, setDate] = React.useState<Date>(new Date());\r\n\r\n  React.useEffect(() => {\r\n    const interval: NodeJS.Timeout = setInterval(() => {\r\n      const update: Date = new Date();\r\n\r\n      if(update.getSeconds() !== date.getSeconds()) {\r\n        setDate(update);\r\n      }\r\n    }, 100);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [date]);\r\n  \r\n  return date;\r\n}\r\n\r\nexport default Time;\r\n"],"names":["LazyWorkedAndLearnedSnap","lazy","props","Suspense","fallback","id","className","Time","useCurrentDateEffect","React","Date","date","setDate","interval","setInterval","update","getSeconds","clearInterval"],"sourceRoot":""}