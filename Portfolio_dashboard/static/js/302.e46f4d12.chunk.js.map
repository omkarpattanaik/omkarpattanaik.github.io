{"version":3,"file":"static/js/302.e46f4d12.chunk.js","mappings":"6MAEMA,GAAkBC,EAAAA,EAAAA,OAAK,kBAAM,oDAAN,IAQ7B,EANoB,SAACC,GAAD,OAClB,SAAC,EAAAC,SAAD,CAAUC,SAAU,KAApB,UACE,SAACJ,GAAD,UAAqBE,KAFL,ECcpB,EAT6B,SAAAA,GAC3B,OACE,iBAAKG,GAAIH,EAAMG,GAAIC,UAAU,OAA7B,WACE,SAACC,EAAA,EAAD,KACA,SAAC,EAAD,MAGL,C,4GCFYC,EAAuB,WAClC,MAAwBC,EAAAA,SAAqB,IAAIC,MAAjD,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAH,EAAAA,WAAgB,WACd,IAAMI,EAA2BC,aAAY,WAC3C,IAAMC,EAAe,IAAIL,KAEtBK,EAAOC,eAAiBL,EAAKK,cAC9BJ,EAAQG,EAEX,GAAE,KAEH,OAAO,kBAAME,cAAcJ,EAApB,CACR,GAAE,CAACF,IAEGA,CACR,EAED,EA3BgB,WACKH,IAEnB,OAEE,iBAAMF,UAAU,OAAhB,4BAEH,C","sources":["components/WeatherSnap/WeatherSnap.lazy.tsx","components/Info/Info.tsx","components/Time/Time.tsx"],"sourcesContent":["import React, { lazy, Suspense } from 'react';\n\nconst LazyWeatherSnap = lazy(() => import('./WeatherSnap'));\n\nconst WeatherSnap = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazyWeatherSnap {...props} />\n  </Suspense>\n);\n\nexport default WeatherSnap;\n","import React, { FC } from 'react';\nimport Time from '../Time/Time';\nimport WeatherSnap from '../WeatherSnap/WeatherSnap.lazy';\nimport './Info.scss';\n\nexport interface IInfoProps {\n  id?: string;\n}\n\nconst Info: FC<IInfoProps> = props => {\n  return(\n    <div id={props.id} className=\"info\">\n      <Time />\n      <WeatherSnap />\n    </div>\n  )\n}\n\nexport default Info;\n","import React, { FC } from 'react';\nimport './Time.scss';\n\ninterface TimeProps {}\n\nconst Time: FC= () => {\n  const date: Date = useCurrentDateEffect();\n  \n  return(\n    // <span className=\"time\">{T.format(date)}</span>\n    <span className=\"time\">Omkar Pattanaik</span>\n  )\n};\n\nexport const useCurrentDateEffect = (): Date => {\n  const [date, setDate] = React.useState<Date>(new Date());\n\n  React.useEffect(() => {\n    const interval: NodeJS.Timeout = setInterval(() => {\n      const update: Date = new Date();\n\n      if(update.getSeconds() !== date.getSeconds()) {\n        setDate(update);\n      }\n    }, 100);\n\n    return () => clearInterval(interval);\n  }, [date]);\n  \n  return date;\n}\n\nexport default Time;\n"],"names":["LazyWeatherSnap","lazy","props","Suspense","fallback","id","className","Time","useCurrentDateEffect","React","Date","date","setDate","interval","setInterval","update","getSeconds","clearInterval"],"sourceRoot":""}